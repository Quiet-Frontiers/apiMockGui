import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Edit, Trash2, Plus, Play, Pause, Circle } from 'lucide-react';
export const ApiList = ({ apis, onEditApi, onDeleteApi, onToggleApi, onAddCase, onEditCase, onDeleteCase, onSetActiveCase }) => {
    const getMethodClass = (method) => {
        return `method-badge method-${method.toLowerCase()}`;
    };
    const getStatusClass = (status) => {
        return `status-badge status-${status}`;
    };
    return (_jsxs("div", { className: "p-4 h-full overflow-y-auto", children: [_jsx("h2", { className: "text-lg font-semibold text-gray-900 mb-4", children: "APIs" }), apis.length === 0 ? (_jsx("div", { className: "text-center text-gray-500 py-8", children: _jsx("p", { children: "No APIs added yet" }) })) : (_jsx("div", { className: "space-y-4", children: apis.map((api) => (_jsxs("div", { className: "card p-4", children: [_jsxs("div", { className: "flex items-center justify-between mb-3", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: getMethodClass(api.method), children: api.method }), _jsx("button", { onClick: () => onToggleApi(api.id), className: `p-1 rounded ${api.isEnabled
                                                ? 'text-green-600 hover:bg-green-50'
                                                : 'text-gray-400 hover:bg-gray-50'}`, title: api.isEnabled ? 'Disable API' : 'Enable API', children: api.isEnabled ? _jsx(Play, { className: "w-4 h-4" }) : _jsx(Pause, { className: "w-4 h-4" }) })] }), _jsxs("div", { className: "flex items-center space-x-1", children: [_jsx("button", { onClick: () => onEditApi(api), className: "p-1 text-gray-600 hover:text-blue-600 hover:bg-blue-50 rounded", title: "Edit API", children: _jsx(Edit, { className: "w-4 h-4" }) }), _jsx("button", { onClick: () => onDeleteApi(api.id), className: "p-1 text-gray-600 hover:text-red-600 hover:bg-red-50 rounded", title: "Delete API", children: _jsx(Trash2, { className: "w-4 h-4" }) })] })] }), _jsxs("div", { className: "mb-3", children: [_jsx("h3", { className: "font-medium text-gray-900", children: api.name }), _jsx("p", { className: "text-sm text-gray-600 font-mono", children: api.path }), api.description && (_jsx("p", { className: "text-sm text-gray-500 mt-1", children: api.description }))] }), _jsxs("div", { children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("h4", { className: "text-sm font-medium text-gray-700", children: "Response Cases" }), _jsxs("button", { onClick: () => onAddCase(api.id), className: "btn-secondary text-xs py-1 px-2", title: "Add Response Case", children: [_jsx(Plus, { className: "w-3 h-3 mr-1" }), "Add Case"] })] }), api.cases.length === 0 ? (_jsx("p", { className: "text-xs text-gray-500", children: "No response cases defined" })) : (_jsx("div", { className: "space-y-2", children: api.cases.map((responseCase) => (_jsxs("div", { className: `flex items-center justify-between p-2 rounded border ${api.activeCase === responseCase.id
                                            ? 'border-primary-200 bg-primary-50'
                                            : 'border-gray-200 bg-gray-50'}`, children: [_jsxs("div", { className: "flex items-center space-x-2 flex-1", children: [_jsx("button", { onClick: () => onSetActiveCase(api.id, responseCase.id), className: `p-1 rounded ${api.activeCase === responseCase.id
                                                            ? 'text-primary-600'
                                                            : 'text-gray-400 hover:text-primary-600'}`, title: api.activeCase === responseCase.id
                                                            ? 'Active case'
                                                            : 'Set as active case', children: _jsx(Circle, { className: `w-3 h-3 ${api.activeCase === responseCase.id ? 'fill-current' : ''}` }) }), _jsxs("div", { className: "flex-1 min-w-0", children: [_jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("span", { className: "text-xs font-medium text-gray-900 truncate", children: responseCase.name }), _jsx("span", { className: getStatusClass(responseCase.status), children: responseCase.status })] }), responseCase.description && (_jsx("p", { className: "text-xs text-gray-500 truncate", children: responseCase.description }))] })] }), _jsxs("div", { className: "flex items-center space-x-1", children: [_jsx("button", { onClick: () => onEditCase(api.id, responseCase.id), className: "p-1 text-gray-500 hover:text-blue-600 hover:bg-blue-50 rounded", title: "Edit Case", children: _jsx(Edit, { className: "w-3 h-3" }) }), _jsx("button", { onClick: () => onDeleteCase(api.id, responseCase.id), className: "p-1 text-gray-500 hover:text-red-600 hover:bg-red-50 rounded", title: "Delete Case", children: _jsx(Trash2, { className: "w-3 h-3" }) })] })] }, responseCase.id))) }))] })] }, api.id))) }))] }));
};
